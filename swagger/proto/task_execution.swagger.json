{
  "swagger": "2.0",
  "info": {
    "title": "proto/task_execution.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/jobs": {
      "get": {
        "summary": "List the TaskOps",
        "operationId": "ListJobs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_task_execJobListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "projectID",
            "description": "OPTIONAL\nThe name of the project to search for pipelines. Caller must have READ access to this project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namePrefix",
            "description": "OPTIONAL\nPipelines with names that match this prefix should be returned. If unspecified, all pipelines in the project, up to pageSize, will be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "OPTIONAL\nNumber of pipelines to return at once. Defaults to 256, and max is 2048.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageToken",
            "description": "OPTIONAL\nToken to use to indicate where to start getting results. If unspecified, returns the first page of results.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "post": {
        "summary": "Run a task",
        "operationId": "RunTask",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_task_execRunTaskResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4gh_task_execTask"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/jobs-service": {
      "get": {
        "summary": "Get Service Info",
        "operationId": "GetServiceInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_task_execServiceInfoResponse"
            }
          }
        },
        "tags": [
          "TaskService"
        ]
      }
    },
    "/v1/jobs/{jobID}": {
      "get": {
        "summary": "Get info about a running task",
        "operationId": "GetJob",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_task_execGetJobResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "jobID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      },
      "delete": {
        "summary": "Cancel a running task",
        "operationId": "CancelJob",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4gh_task_execCancelJobResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "jobID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    }
  },
  "definitions": {
    "ga4gh_task_execCancelJobRequest": {
      "type": "object",
      "properties": {
        "jobID": {
          "type": "string"
        }
      }
    },
    "ga4gh_task_execCancelJobResponse": {
      "type": "object"
    },
    "ga4gh_task_execExecutor": {
      "type": "object",
      "properties": {
        "imageName": {
          "type": "string",
          "title": "REQUIRED\nImage name"
        },
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "REQUIRED\nThe command to be executed"
        },
        "workdir": {
          "type": "string",
          "title": "OPTIONAL: default image directory\nThe working directory that the command will be executed in"
        },
        "stdin": {
          "type": "string",
          "title": "OPTIONAL\nPath for supplying input to stdin, blank if none"
        },
        "stdout": {
          "type": "string",
          "title": "OPTIONAL\nPath for stdout recording, blank if not storing to file"
        },
        "stderr": {
          "type": "string",
          "title": "OPTIONAL\nPath for stderr recording, blank if not storing to file"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execPorts"
          },
          "title": "OPTIONAL\nPort to expose from within the container, blank if none"
        },
        "environ": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "OPTIONAL\nEnviromental variables to set within the container"
        }
      },
      "title": "Executor executes a task"
    },
    "ga4gh_task_execExecutorLog": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "title": "When the command was executed in ISO 8601 format"
        },
        "endTime": {
          "type": "string",
          "title": "When the command completed in ISO 8601 format"
        },
        "stdout": {
          "type": "string",
          "title": "Sample of stdout (not guaranteed to be entire log)"
        },
        "stderr": {
          "type": "string",
          "title": "Sample of stderr (not guaranteed to be entire log)"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "title": "Exit code of the program"
        },
        "hostIP": {
          "type": "string",
          "title": "ip of worker host"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execPorts"
          },
          "title": "ports bound from container to host"
        }
      }
    },
    "ga4gh_task_execFileLog": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "REQUIRED\nurl of long term storage that the output file was copied to\nis a url specific to the implementing\nsystem. For example s3://my-object-store/file1 or gs://my-bucket/file2 or\nfile:///path/to/my/file"
        },
        "path": {
          "type": "string",
          "title": "REQUIRED\npath in the machine file system that originated the file"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "REQUIRED\nSize of produced file"
        }
      },
      "title": "Log of file output by workflow"
    },
    "ga4gh_task_execGetJobRequest": {
      "type": "object",
      "properties": {
        "jobID": {
          "type": "string"
        }
      }
    },
    "ga4gh_task_execGetJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/ga4gh_task_execJob"
        }
      }
    },
    "ga4gh_task_execJob": {
      "type": "object",
      "properties": {
        "jobID": {
          "type": "string",
          "title": "REQUIRED"
        },
        "task": {
          "$ref": "#/definitions/ga4gh_task_execTask",
          "title": "REQUIRED"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "REQUIRED"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execJobLog"
          },
          "description": "REQUIRED\nLength of logs reflects number of retries. \nIf the implementation doesn't support retries this field will always be of length 1."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execFileLog"
          },
          "title": "List of all files copied out to the object store as well as some basic\nmeta-data about them. This is an expanded list, if the task outputs \nlist directories, this record details every individual file"
        }
      },
      "title": "The description of the running instance of a task"
    },
    "ga4gh_task_execJobDesc": {
      "type": "object",
      "properties": {
        "jobID": {
          "type": "string",
          "title": "REQUIRED"
        },
        "state": {
          "$ref": "#/definitions/ga4gh_task_execState",
          "title": "REQUIRED"
        }
      },
      "title": "Small description of jobs, returned by server during listing"
    },
    "ga4gh_task_execJobListRequest": {
      "type": "object",
      "properties": {
        "projectID": {
          "type": "string",
          "description": "OPTIONAL\nThe name of the project to search for pipelines. Caller must have READ access to this project."
        },
        "namePrefix": {
          "type": "string",
          "description": "OPTIONAL\nPipelines with names that match this prefix should be returned. If unspecified, all pipelines in the project, up to pageSize, will be returned."
        },
        "pageSize": {
          "type": "integer",
          "format": "int64",
          "description": "OPTIONAL\nNumber of pipelines to return at once. Defaults to 256, and max is 2048."
        },
        "pageToken": {
          "type": "string",
          "description": "OPTIONAL\nToken to use to indicate where to start getting results. If unspecified, returns the first page of results."
        }
      },
      "title": "Request listing of jobs tracked by server"
    },
    "ga4gh_task_execJobListResponse": {
      "type": "object",
      "properties": {
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execJobDesc"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "title": "Return envelope"
    },
    "ga4gh_task_execJobLog": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execExecutorLog"
          },
          "title": "REQUIRED"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "OPTIONAL"
        },
        "startTime": {
          "type": "string",
          "title": "OPTIONAL\nWhen the job was started in ISO 8601 format"
        },
        "endTime": {
          "type": "string",
          "title": "OPTIONAL\nWhen the job reached a terminal state in ISO 8601 format"
        }
      }
    },
    "ga4gh_task_execPorts": {
      "type": "object",
      "properties": {
        "container": {
          "type": "integer",
          "format": "int64",
          "title": "REQUIRED \nExposed port on container"
        },
        "host": {
          "type": "integer",
          "format": "int64",
          "title": "OPTIONAL \nMust be greater than 1024;\nDefaults to 0"
        }
      },
      "title": "host to container port mappings"
    },
    "ga4gh_task_execResources": {
      "type": "object",
      "properties": {
        "cpuCores": {
          "type": "integer",
          "format": "int64",
          "title": "OPTIONAL\nRequested number of CPUs"
        },
        "preemptible": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can schedule on resource that resource that can be preempted, like AWS Spot Instances\nOPTIONAL default false"
        },
        "ramGb": {
          "type": "number",
          "format": "double",
          "title": "OPTIONAL\nRequested amount of RAM in GB"
        },
        "diskGb": {
          "type": "number",
          "format": "double",
          "title": "OPTIONAL\nRequested disk size in GB"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "OPTIONAL\noptional scheduling information for systems where multiple compute zones are avalible"
        }
      }
    },
    "ga4gh_task_execRunTaskResponse": {
      "type": "object",
      "properties": {
        "jobID": {
          "type": "string"
        }
      },
      "title": "ID of an instance of a Task"
    },
    "ga4gh_task_execServiceInfoRequest": {
      "type": "object",
      "title": "Blank request message for service request"
    },
    "ga4gh_task_execServiceInfoResponse": {
      "type": "object",
      "properties": {
        "storageConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "System specific key/value pairs\nExample for a shared file system based storage system:\nstorageType=sharedFile, baseDir=/path/to/shared/directory"
        }
      },
      "title": "Information about Task Execution Service\nMay include information related (but not limited to)\nresource availability and storage system information"
    },
    "ga4gh_task_execState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Queued",
        "Running",
        "Paused",
        "Complete",
        "Error",
        "SystemError",
        "Canceled",
        "Initializing"
      ],
      "default": "Unknown"
    },
    "ga4gh_task_execTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL\nuser name for task"
        },
        "projectID": {
          "type": "string",
          "title": "OPTIONAL\nparameter for execution engine to define/store group information"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL\nfree text description of task"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execTaskParameter"
          },
          "title": "REQUIRED\nFiles to be copied into system before tasks"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execTaskParameter"
          },
          "title": "REQUIRED\nFiles to be copied out of the system after tasks"
        },
        "resources": {
          "$ref": "#/definitions/ga4gh_task_execResources",
          "title": "REQUIRED\nDefine required system resources to run job"
        },
        "executors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4gh_task_execExecutor"
          },
          "title": "REQUIRED\nA list of executors that will be run sequentially"
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "OPTIONAL\nA list of additional volumes \nThese are shared between executors. Volumes for the executor work dir,\ninputs and outputs will be inferred and do not need to be defined here."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "A key-value map of arbitrary metadata useful to track with this Task request"
        }
      },
      "title": "The description of a task to be run"
    },
    "ga4gh_task_execTaskParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "OPTIONAL\nname of the parameter"
        },
        "description": {
          "type": "string",
          "title": "OPTIONAL\nText description"
        },
        "url": {
          "type": "string",
          "title": "REQUIRED\nurl in long term storage, is a url specific to the implementing\nsystem. For example s3://my-object-store/file1 or gs://my-bucket/file2 or\nfile:///path/to/my/file"
        },
        "path": {
          "type": "string",
          "description": "REQUIRED\npath in the executor file system.\nAll inputs are mounted as read-only."
        },
        "class": {
          "type": "string",
          "title": "REQUIRED\nType of data, \"File\" or \"Directory\"\nif used for an output all the files in the directory\nwill be copied to the storage url"
        },
        "create": {
          "type": "boolean",
          "format": "boolean",
          "title": "OPTIONAL: default false\nif the parameter is an output, should the element be created before executing\nthe command. For example if saving the working directory as an output,\nthe directory needs to exist before the command is called. If false, it is\nassumed that the user will create the element as a part of the operation"
        },
        "contents": {
          "type": "string",
          "title": "OPTIONAL\nFile contents literal. \nImplementations should support a minimum of 128 KiB in this field and may define its own maximum.\nUTF-8 encoded"
        }
      },
      "title": "Parameters for Task"
    }
  }
}
